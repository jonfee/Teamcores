
@{
	ViewData["Title"] = "课程详情";
}

<template v-if="hasAccess && details != null">
	<dl class="dl-label-w100 mt30">
		<template v-if="details.Image!=''">
			<dt>封面</dt>
			<dd><img :src="details.Image" /></dd>
		</template>
		<dt>标题</dt>
		<dd>{{ details.Title}}</dd>
		<dt>所属科目</dt>
		<dd>{{ details.SubjectName }}</dd>
		<dt>内容</dt>
		<dd>{{ details.Content }}</dd>
		<dt>目标</dt>
		<dd>{{ details.Objective }}</dd>
		<dt>说明</dt>
		<dd>{{ details.Remarks }}</dd>
		<dt>状态</dt>
		<dd>{{ CourseStatus.getItem(details.Status).toString('text') }}</dd>
		<dt>创建时间</dt>
		<dd>{{ new Date(Date.parse(details.CreateTime)).format('yyyy-MM-dd hh:mm:ss') }}</dd>
		<dt>章节</dt>
		<dd>
			<Tree v-if="courseChapters != null" :data="courseChapters" v-on:on-select-change="chapterSelected"></Tree>
			<template v-else>暂无章节</template>
		</dd>
	</dl>
</template>
<template v-if="!hasAccess">
	<p class="error-tip">无访问权限</p>
</template>

@section title_actions{
	<i-button type="success" v-on:click="goBack">返回</i-button>
}

@section page_script{
	<script>
		var vm = new Vue({
			el: '#content',
            data: {
				//是否有访问权限
                hasAccess: true,
				//详细信息内容结构
				details: {
                    CourseId: 0,
                    SubjectId: 0,
                    SubjectName: '科目名',
                    UserId: 0,
                    Title: '课程标题',
                    Image: '',
                    Remarks: '课程说明',
                    Content: '课程内容',
                    Objective: '学习目标',
                    Status: 1,
                    CreateTime: '',
                    Chapters: [
                        {
                            ChapterId: 0,
							Title: '章节标题',
							Children: [
								{
									ChapterId: 0,
									Title: '直子章节标题',
									Children: [],
									Studied: false
								}
							],
							Studied: false
                        }
                    ]
				}
			},
			computed: {
				/**
				 * 课程下的章节数据转换为Tree组件可用的数据源
				 */
				courseChapters() {
					return this.convertToTreeData(this.details.Chapters);
				}
			},
			mounted() {
				//当前查看的课程ID
                this.details.CourseId = @(Html.Raw("'" + Html.ViewContext.RouteData.Values["id"] + "'"));

				// 获取课程详细信息
				this.getDetails();
			},
            methods: {
                /**
                 * 返回
                 */
				goBack() {
					var referrer = document.referrer;
					if (referrer != null || referrer != '') {
						location = referrer;
					} else {
						location = '/course/index';
					}
				},
				/**
				 * 章节点击事件
				 */
				chapterSelected(data) {
					location = '/chapter/details/'+ data[0].id;
				},
				/**
				 * 获取课程详细信息
				 */
                getDetails() {
                    var _this = this;
                    Ajax.get({
                        url: '/api/course/details/' + this.details.CourseId,
						success: (response) => {
							var data = response.data;
							if (!data.Error) {
								this.details = data.Data;
							} else {
								this.details = null;
                                this.$Message.error(data.Message);

                                //权限不足
                                if (data.Code === ApiResult.NO_ACCESS.toString("name")) {
                                    _this.hasAccess = false;
                                }
							}
						},
                        error: (error) => {
							this.details == null;
							this.$Message.error('请求数据失败，请重试！');
						}
					});
				},
				/**
				 * 转换为章节树组件可用的数据
				 * @@param {Array} chapters details.Chapters结构的章节信息集合
				 */
				convertToTreeData(chapters) {
					
					if (chapters === undefined || chapters == null || chapters.length < 1) return null;

					var data = [];

					try {
						var len = chapters.length;

						for (var i = 0; i < len; i++) {
							var item = chapters[i];

							var children = [];
							if (item.Children != null && item.Children.length > 0) {
								children = this.convertToTreeData(item.Children);
							}

							var title = item.Title;
							if (item.Studied) {
								title += '<span style="color:green; margin-left:20px;">[已学习]</span>';
							} else {
								title += '<span style="color:red; margin-left:20px;">[未学习]</span>';
							}

							data.push({
								id: item.ChapterId,
								title: title,
								children: children,
								expand: true
							});
						}
					} catch (e) { }

					return data;
				}
			}
		});
	</script>
}