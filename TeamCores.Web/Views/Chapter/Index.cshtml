@{
    ViewData["Title"] = "课程章节管理";
}

@section style{
    <link href="~/css/componets/treelist.css" rel="stylesheet"/>
    <link href="~/css/chapter/chapter.css" rel="stylesheet"/>
}
<!-- demo root element -->

<div>
    <div class="searcher">
        <span>
            所属课程：
            <i-select v-model="queries.course" style="width : 100px">
                <i-option value="" key="">全部</i-option>
                <i-option v-for="item in courses" :value="item.CourseId" :key="item.CourseId">{{item.Title}}</i-option>
            </i-select>
        </span>
        <span>
            <i-button type="primary" icon="ios-search" v-on:click="OnSearch">搜索</i-button>
        </span>
    </div>
    <div class="content-body">
        <div class="chapter" v-if="chapters&&chapters.length">
            <span>
                <tree-list :model="treeData"
                           v-on:addchild="onAddChild"
                           v-on:preview="onPreview"
                           v-on:modify="onModify"
                           v-on:remove="onRemove">
                </tree-list>
            </span>
        </div>
        <div v-else>
            当前课程暂无章节!
        </div>

        <Modal v-model="showEdit" :mask-closable="false" :top="50" :styles="{top: '200px'}" :width="560" v-on:on-ok="onSave">
            <p slot="header" style="text-align : center">
                <span>{{modalTitle}}</span>
            </p>
            <i-form ref="editForm" :model="editChapter" :rules="validateRules" :label-width="80">
                <Form-item label="章节名称" prop="Title">
                    <i-input v-model="editChapter.Title" placeholder="请输入章节名称"></i-input>
                </Form-item>
                <Form-item label="章节内容" prop="Content">
                    <i-input v-model="editChapter.Content" placeholder="请输入章节内容"></i-input>
                </Form-item>
                <Form-item label="章节视频">
                    <div class="chapter-video" v-if="this.editChapter&&this.editChapter.Video">
                        <video controls="controls" preload="preload" loop="loop" :src="editChapter.Video"></video>
                        <div class="video-cover">
                            <Icon type="close-circled" v-on:click.native="OnRemoveVideo"></Icon>
                        </div>
                    </div>
                    <Upload v-else class="upload"
                            action="/api/uploadify/form"
                            :show-upload-list="false"
                            :on-success="OnUploadSuccess">
                        <i-button type="ghost" icon="ios-cloud-upload-outline">上传视频</i-button>
                    </Upload>
                </Form-item>
            </i-form>
            <p slot="footer">
                <i-button type="primary" v-on:click="onSave">提交</i-button>
                <i-button type="ghost" v-on:click="showEdit=false" style="margin-left : 8px">取消</i-button>
            </p>
        </Modal>

    </div>
</div>
@section title_actions{
    <i-button type="success" v-on:click="onAdd">新增</i-button>
}
@section page_script{
    <script src="~/js/vue/components/tree-list.js"></script>
    <script>
        var vm = new Vue({
            el : '#content',
			data: {
				queries: {},
                // 验证规则
                validateRules : {
                    Title :
                    [
                        {
                            required : true,
                            message : "请输入章节名称"
                        }
                    ],
                    Content : [
                        {
                            required : true,
                            message : "请输入章节内容"
                        }
                    ]
                },
                courses : [], // 所有课程
                editChapter : {
                    CourseId : this.currentCourseId,
                    ParentId : 0,
                    Title : "",
                    Content : "",
                    Video : null
                },
                showEdit: false,
                // 课程下的章节
                chapters : [

                ],
                editMode : false,
                defaultFileLst : [
                    {
                        name : "abc.mp4",
                        url : "http://baidu.com"
                    }
                ]
            },
            components : {
                'tree-list' : treeList
            },
            created : function()
			{
				this.loadQueries();
				this.getCourses();
				this.loadData();
            },
			computed: {
				currentCourseId() {
					return this.queries.course;
				},
                isEdit()
                {
                    return this.editChapter && this.editChapter.ChapterId > 0;
                },
                modalTitle()
                {
                    return this.isEdit ? "编辑章节" : "新增章节";
                },
                treeData()
                {
                    if(!this.chapters)
                    {
                        return null;
                    }

                    let dataSource = this.getChildren(0);

                    return dataSource;
                }
            },
            methods :
			{
				/**
				 * 加载筛选条件
				 */
				loadQueries() {
					this.queries["course"] = @(Html.Raw("'" + Html.ViewContext.HttpContext.Request.Query["course"] + "'"));
				},
                /**
                * 递归查询所有的子章节
                * @@param sources
                */
                getChildren(parentId)
                {
                    const dataSource = this.chapters.filter((item) =>
                    {
                        return item.ParentId == parentId;
                    }).sort((pre, next) =>
                    {
                        return pre.CreateTime > next.CreateTime;
                    });

                    dataSource.forEach((item) =>
                    {
                        item.Children = this.getChildren(item.ChapterId);
                    });

                    return dataSource;
                },
                /**
                 * 获取所有的课程
                 */
                getCourses()
				{
                    Ajax.post({
                        url : "/api/course/search",
                        data : {
                            pageIndex : 1,
                            pageSize : 100
                        },
                        success : (response) =>
                        {
                            var data = response.data;
							if (!data.Error) {
								const pager = data.Data;
								this.courses = pager.Table;
							} else {
								this.$Message.error("加载课程数据失败。");
							}
                        },
                        error : (error) =>
						{
							this.$Message.error("加载课程数据失败。请重试");
                        }
                    });
                },
                /**
                 * 搜索
                */
                OnSearch()
				{
					var courseId = this.queries.course || '';
					if (courseId === '' || courseId === '0') {
						this.$Message.error("请选择课程。");
					} else {
						reload.call(this);
					}
                },
                /**
                 * 加载数据，会自动从searchQuery中解析搜索的参数
                 */
                loadData()
                {
                    const pagesize = 10000;
					const pageindex = 1;
					const courseId = this.queries.course;

                    if(!courseId || courseId.length == 0)
                    {
                        return;
                    }

                    const postData = {
                        courseId : courseId,
                        pageindex : pageindex,
                        pagesize : pagesize
					};
					
                    Ajax.post({
                        url : "/api/chapter/search",
                        data : postData,
                        success : (response) =>
                        {
							var data = response.data;
							
							if (!data.Error) {
								const pager = data.Data;
								this.chapters = pager.Table;
							} else {
								apiError(data.Code);
							}
                        },
                        error : (error) =>
						{
							this.$Message.error("加载数据失败，请重试！");
                        }
                    });
                },

                /**
                 * 新增按钮点击事件
                */
                onAdd()
                {
                    if(!this.currentCourseId || this.currentCourseId == 0)
                    {
                        this.$Message.error("请先选择所属课程!");
                        return;
                    }
                    this.initEditChapter(0);
                    this.showEdit = true;
                },
                /**
                 * 编辑按钮点击事件
                 * @@param item 选中的课程
                 */
                OnEdit(item)
                {
                    const courseId = item.CourseId;
                    location = `/course/edit/${courseId}`;
                },
                /**
                 * 保存按钮点击事件
                 */
                onSave()
                {
                    this.$refs["editForm"].validate((valid) =>
                    {
                        console.log(valid);
                        if(valid)
                        {
                            const action = this.isEdit ? "modify" : "add",
                                  url = `/api/chapter/${action}`;

                            Ajax.post({
                                url : url,
                                data : this.editChapter,
                                success : (response) =>
                                {
                                    var data = response.data;
                                    if(!data.Error)
                                    {
                                        this.$Message.success("操作成功");
                                        this.showEdit = false;
                                        this.loadData();
                                    }
                                    else
                                    {
                                        this.$Message.error(data.Message);
                                    }
                                },
                                error : (error) =>
                                {
                                    this.$Message.error('操作失败，请重试！');
                                }
                            });
                        }
                    });
                },
                /**
                 * 文件上传成功回调
                 */
                OnUploadSuccess(file)
                {
                    if(file && file.length > 0)
                    {
                        this.editChapter.Video = file[0].filePath;
                    }
                },

                /**
                 * 删除视频按钮点击事件
                 */
                OnRemoveVideo()
                {
                    this.editChapter.Video = null;
                },
                /**
                 * 删除按钮点击事件
                 * @@param item
                 */
                OnDelete(item)
                {
                },
                /**
                 * 启用禁用
                 */
                setStatus(index)
                {
                    // 操作
                    let action;
                    var nextStatus;

                    var item = this.gridData[index];
                    console.log(index);

                    //如果当前用户状态为“启用”，则将改变为“禁用”,反之则改变为“启用”状态
                    if(item.Status == CourseStatus.ENABLED)
                    {
                        action = 'setdisable';
                        nextStatus = CourseStatus.DISABLED;
                    }
                    else
                    {
                        action = 'setenable';
                        nextStatus = CourseStatus.ENABLED;
                    }

                    Ajax.post({
                        url : `/api/course/${action}`,
                        data : {id : item.CourseId},
                        success : (response) =>
                        {
                            var data = response.data;
                            if(!data.Error)
                            {
                                item.Status = nextStatus.toString('d');
                            }
                            else
                            {
                                this.$Message.error(data.Message);
                            }
                        },
                        error : (error) =>
                        {
                            this.$Message.error('操作失败，请重试！');
                        }
                    });
                },

                /**
                 * 删除点击事件
                 * @@param courseId 考题Id
                 */
                onDelte(courseId)
                {
                    this.$Modal.confirm({
                        title : '系统提示',
                        content : '确认要删除该课程吗?',
                        onOk : () =>
                        {
                            this.deleteCourse(courseId);
                        },
                        onCancel : () =>
                        {
                        }
                    });
                },

                /**
                 * 删除
                 * @@param chapterId
                 */
                deleteChapter(chapterId)
                {
                    Ajax.post({
                        url : '/api/chapter/delete',
                        data: { id: chapterId},
                        success : (response) =>
                        {
                            var data = response.data;
                            if(!data.Error)
                            {
                                this.$Message.success('删除成功！');
                                this.loadData();
                            }
                            else
                            {
                                this.$Message.error(data.Message);
                            }
                        },
                        error : (error) =>
                        {
                            this.$Message.error('操作失败，请重试！');
                        }
                    });
                },
                /**
                 * 初始化新增/编辑的章节
                 */
                initEditChapter(parentId)
                {
                    this.editChapter =
                    {
                        CourseId : this.currentCourseId,
                        ParentId : parentId,
                        Title : "",
                        Content : "",
                        Video : null
                    };
                },

                /**
                 * 查看详情
                 */
                onPreview(selectedItem, e)
				{
					var detailsUrl = "/chapter/details/" + selectedItem.ChapterId;
					goTo(detailsUrl);
                },
                /**
                 * 添加子章节点击事件
                 */
                onAddChild(selectedItem)
                {
                    this.initEditChapter(selectedItem.ChapterId);
                    this.showEdit = true;
                },
                /**
                 * 编辑按钮点击事件
                 */
                onModify(selectedItem)
                {
                    this.editChapter = selectedItem;
                    this.showEdit = true;
                },
                /**
                 * 删除按钮点击事件
                 */
                onRemove(selectedItem)
                {
                    this.$Modal.confirm({
                        title : '系统提示',
                        content : '确认要删除该章节吗?',
                        onOk : () =>
                        {
                            this.deleteChapter(selectedItem.ChapterId);
                        },
                        onCancel : () =>
                        {
                        }
                    });
                }
            }
        });

    </script>
}