
@{
	ViewData["Title"] = "章节详情";
}

<template v-if="details != null">
	<dl class="dl-label-w100 mt30">
		<dt>所属课程</dt>
		<dd><a :href="'/course/details/'+details.CourseId">{{ details.CourseTitle }}</a></dd>
		<template v-if="details.ParentId>0">
			<dt>父章节</dt>
			<dd>{{ details.ParentTitle }}</dd>
		</template>
		<dt>标题</dt>
		<dd>{{ details.Title}}</dd>
		<dt>内容</dt>
		<dd>{{ details.Content }}</dd>
		<template v-if="details.Video!=null||details.Video!=''">
			<dt>视频</dt>
			<dd>
				<video width="640" height="320" autoplay="autoplay" controls="controls">
					<source :src="details.Video" type="video/*">
				</video>
			</dd>
		</template>
		<dt>浏览次数</dt>
		<dd>{{ details.Count }}</dd>
		<dt>创建时间</dt>
		<dd>{{ new Date(Date.parse(details.CreateTime)).format('yyyy-MM-dd hh:mm:ss') }}</dd>
	</dl>
</template>
<video width="640" height="320" autoplay="autoplay" controls="controls">
	<source :src="details.Video" type="video/*">
</video>

@section title_actions{
	<i-button type="success" v-on:click="goBack('/course/details/' + details.CourseId)">返回</i-button>
}

@section page_script{
	<script>
		var vm = new Vue({
			el: '#content',
            data: {
				//学习心跳包周期（单位：秒）
				heartbeatCycle: 60,
				//详细信息内容结构
				details: {
					ChapterId: 0,
					CourseId: 0,
					CourseTitle: '',
					ParentId: 0,
					PareantTitle: '',
					Title: '',
					Content: '',
					Video: '',
					Count: '',
					Status: 1,
					CreateTime: ''
				}
			},
			mounted() {
				//当前查看的课程章节ID
				this.details.ChapterId = @(Html.Raw("'" + Html.ViewContext.RouteData.Values["id"] + "'"));

				// 开始学习
				this.beginStuding();

				//定义心跳包对象
				var cycleMills = this.heartbeatCycle * 1000;//毫秒
				setInterval(this.heartbeatHandler, cycleMills);
			},
            methods: {
				/**
				 * 学习开始标注
				 */
				beginStuding() {
					Ajax.post({
						url: '/api/Studing/chapter',
						data: { chapterid: this.details.ChapterId },
						success: (response) => {
							var data = response.data;
							console.log(data);
							if (!data.Error) {
								this.details = data.Data;
							} else {
								this.details = null;
								apiError(data.Code, data.Message);
							}
						},
						error: (error) => {
							this.details == null;
							apiError(null,'请求数据失败，请重试！');
						}
					});
				},
				/**
				 * 学习时间心跳包执行事件
				 */
				heartbeatHandler() {
					Ajax.post({
						url: '/api/studing/heartbeat',
						data: { cycleSeconds: this.heartbeatCycle }
					});
				}
			}
		});
	</script>
}
