@{
    ViewData["Title"] = "新增考题";
}
@section head_script
{
    <script src="~/js/pattern.js"></script>
}
@section style{
    <link href="~/css/question/add.css" lang="scss" rel="stylesheet"/>
}
<div class="content-body">
    <i-form ref="formValidate" :model="question" :rules="validateRules" :label-width="80">
        <Form-item class="w-48" label="题目" prop="Topic">
            <i-input v-model="question.Topic" placeholder="题目"></i-input>
        </Form-item>
        <Form-item class="w-48" label="所属课程" prop="CourseId">
            <i-select v-model="question.CourseId">
                <i-option v-for="item in courses" :value="item.CourseId" :key="item.CourseId">{{item.Title}}</i-option>
            </i-select>
        </Form-item>
        <Form-item class="w-48" label="题目类型" prop="Type">
            <i-select v-model="question.Type">
                <i-option v-for="item in QuestionType.items" :value="item.value" :key="item.value">{{item.text}}</i-option>
            </i-select>
        </Form-item>

        @*选项与答案*@
        <templete v-if="question&&question.Type">
            @*单选与多选*@
            <Form-item v-if="question.Type==QuestionType.SINGLE_CHOICE.value||question.Type==QuestionType.MULTIPLE_CHOICE.value" class="w800" label="选项与答案" prop="AnswerOptionsJson">
                <div class="answer-options">
                    <ul class="tab-list">
                        <li v-for="(item, index) in answeroptions" :key="index">
                            <template v-if="index == answeroptions.length - 1">
                                <span>
                                    <i-input v-model="item.Code" placeholder="请输入答案编号" :maxlength="6"/>
                                </span>
                                <span :title="item.Answer">
                                    <i-input v-model="item.Answer" placeholder="请输入答案内容" :maxlength="200"/>
                                </span>
                                <span>
                                    <Checkbox v-model="item.IsRight">是否为正确答案</Checkbox>
                                </span>
                            </template>
                            <template v-else>
                                <span>{{item.Code}}</span>
                                <span :title="item.value">{{item.Answer}}</span>
                                <span :title="item.value">{{item.IsRight?'正确答案':'错误答案'}}</span>
                            </template>
                            <i-button type="text" v-on:click="onRemoveOption(index)">
                                <Icon type="close-circled"></Icon>
                            </i-button>
                        </li>
                        <li v-if="answeroptions.length <= 7" class="add">
                            <a href="javascript:void(0)" v-on:click="onAddOption">+</a>
                        </li>
                    </ul>
                </div>
            </Form-item>

            @*判断题*@
            <Form-item v-else-if="question.Type==QuestionType.TRUE_OR_FALSE.value" label="是否正确" prop="AnswerOptionsJson">
                <Radio-group v-model="trueFalseAnswer">
                    <Radio label="true">
                        <span>是</span>
                    </Radio>
                    <Radio label="false">
                        <span>否</span>
                    </Radio>
                </Radio-group>
            </Form-item>

            @*填空题*@
            <Form-item v-else-if="question.Type==QuestionType.GAP_FILLING.value" class="w-60" label="正确答案" prop="AnswerOptionsJson">
                <i-input v-model="gapAnswer" placeholder="请输入正确答案"></i-input>
            </Form-item>

            @*问答题*@
            <Form-item v-else-if="question.Type==QuestionType.ESSAY_QUESTION.value" class="w-60" label="知识点" prop="AnswerOptionsJson">
                <i-input v-model="easyAnswer" type="textarea" placeholder="请输入知识点"></i-input>
            </Form-item>


        </templete>

        <Form-item class="w-48">
            <i-button type="primary" v-on:click="handleSubmit('formValidate')">提交</i-button>
            <i-button type="ghost" v-on:click="handleReset('formValidate')" style="margin-left : 8px">重置</i-button>
        </Form-item>
    </i-form>
</div>
@section title_actions{
    <i-button type="success" v-on:click="goBack('/questions/index')">返回</i-button>
}
@section page_script{
    <script>
        var vm = new Vue({
            el : '#content',
            data : {
                subjects : {},
                courses : {},
                // 考题对象
                question : {
                    CourseId : 0,
                    Topic : "",
                    Type : '',
                    AnswerOptionsJson : {},
                },
                // 单选多选题 答案选项
                answeroptions : [
                    {
                        Code : '',
                        Answer : '',
                        IsRight : false
                    }
                ],
                // 判断题答案是否正确
                trueFalseAnswer : "false",
                // 填空题正确答案
                gapAnswer : "",
                // 问答题知识点
                easyAnswer : "",
                // 验证规则
                validateRules : {
                    Topic :
                    [
                        {
                            required : true,
                            message : "题目主题不能为空"
                        }
                    ],
                    CourseId : [
                        {
                            required : true,
                            message : "请选择所属课程"
                        }
                    ],
                    Type : [
                        {
                            required : true,
                            message : "请选择题目类型"
                        }
                    ]
                }
            },
            created()
            {
                this.getCourses();
            },
            methods : {
                /**
                 * 保存
                 * @@param name 表单名称
                 */
                handleSubmit(name)
                {
                    this.$refs[name].validate((valid) =>
                    {
                        if(valid)
                        {
                            switch(this.question.Type)
                            {
                                //单选题
                                case QuestionType.SINGLE_CHOICE.value:
                                {
                                    if(!this.answeroptions || this.answeroptions.length <= 1)
                                    {
                                        this.$Message.error("至少添加两个答案!");
                                        return;
                                    }

                                    const lastOption = this.answeroptions[this.answeroptions.length - 1];
                                    if(lastOption.Code.trim().length == 0)
                                    {
                                        this.$Message.error('请输入答案编号!');

                                        return;
                                    }

                                    if(lastOption.Answer.trim().length == 0)
                                    {
                                        this.$Message.error('请输入答案内容!');

                                        return;
                                    }
                                    const rightCount = this.answeroptions.filter((item) =>
                                    {
                                        return item.IsRight == true;
                                    }).length;
                                    console.log(rightCount);

                                    if(rightCount != 1)
                                    {
                                        this.$Message.error('单选题有且仅有一个正确答案!');

                                        return;
                                    }

                                    this.question.AnswerOptionsJson = JSON.stringify({Options : this.answeroptions});
                                    break;
                                }
                                //多选题验证
                                case QuestionType.MULTIPLE_CHOICE.value:
                                {
                                    if(!this.answeroptions ||
                                        this.answeroptions.length <= 2)
                                    {
                                        this.$Message.error("多选题至少添加三个答案!");
                                        return;
                                    }

                                    const lastOption = this.answeroptions[this.answeroptions.length - 1];
                                    if(lastOption.Code.trim().length == 0)
                                    {
                                        this.$Message.error('请输入答案编号!');

                                        return;
                                    }

                                    if(lastOption.Answer.trim().length == 0)
                                    {
                                        this.$Message.error('请输入答案内容!');

                                        return;
                                    }
                                    const rightCount = this.answeroptions.filter((item) =>
                                    {
                                        return item.IsRight == true;
                                    }).length;
                                    console.log(rightCount);

                                    if(rightCount <= 1)
                                    {
                                        this.$Message.error('多选题至少有两个正确答案!');

                                        return;
                                    }

                                    this.question.AnswerOptionsJson = JSON.stringify({Options : this.answeroptions});
                                    break;
                                }
                                // 判断题
                                case QuestionType.TRUE_OR_FALSE.value:
                                {
                                    this.question.AnswerOptionsJson =
                                        JSON.stringify({ Answer: (this.trueFalseAnswer == 'true' ? true : false)});
                                    break;
                                }
                                // 填空题
                                case QuestionType.GAP_FILLING.value:
                                {
                                    if(!this.gapAnswer || this.gapAnswer.trim().length == 0)
                                    {
                                        this.$Message.error("请输入正确答案!");
                                        return;
                                    }

                                    this.question.AnswerOptionsJson =
                                        JSON.stringify({Answer : this.gapAnswer});
                                    break;
                                }
                                // 填空题
                                case QuestionType.ESSAY_QUESTION.value:
                                {
                                    if(!this.easyAnswer || this.easyAnswer.trim().length == 0)
                                    {
                                        this.$Message.error("请输入知识点!");
                                        return;
                                    }

                                    this.question.AnswerOptionsJson =
                                        JSON.stringify({Knowledge : this.easyAnswer});
                                    break;
                                }
                                default:
                                    break;
                            }

                            Ajax.post({
                                url : '/api/question/add',
                                data : this.question,
                                success : (response) =>
                                {
                                    var data = response.data;
                                    if(!data.Error)
                                    {
                                        this.$Message.success("添加成功!");
                                        goTo("/questions/index", 1000);
                                    } else {
                                        apiError.call(this, data.Code, data.Data);
                                    }
                                },
                                error: (error) => {
                                    apiError.call(this);
                                }
                            });
                        }
                    });
                },
                /**
                 * 重置
                 * @@param name 表单名称
                 */
                handleReset(name)
                {
                    this.$refs[name].resetFields();
                },
                /**
                 * 获取所有的课程
                 */
                getCourses()
                {
                    Ajax.post({
                        url : "/api/course/search",
                        data : {
                            pageIndex : 1,
                            pageSize : 100
                        },
                        success : (response) =>
                        {
                            var data = response.data;
							if (!data.Error) {
								const pager = data.Data;
								this.courses = pager.Table;
                            } else {
                                apiError.call(this, data.Code, data.Data);
                            }
                        },
                        error: (error) => {
                            apiError.call(this);
                        }
                    });
                },
                /**
                 * 删除选项
                 */
                onRemoveOption(index)
                {
                    if(this.answeroptions.length > 0)
                    {
                        this.answeroptions.splice(index, 1);
                    }
                },
                /**
                 * 删除选项
                 */
                onAddOption()
                {
                    if(this.answeroptions.length > 0)
                    {
                        const lastOption = this.answeroptions[this.answeroptions.length - 1];
                        if(lastOption.Code.trim().length == 0)
                        {
                            this.$Message.error('请输入答案编号!');
                            return;
                        }
                        if(lastOption.Answer.trim().length == 0)
                        {
                            this.$Message.error('请输入答案内容!');
                            return;
                        }
                    }
                    this.answeroptions.push({
                        Code : '',
                        Answer : '',
                        IsRight : false
                    });
                }

            }
        });
    </script>
}