@{
    ViewData["Title"] = "新增用户";
}
@section head_script
{
    <script src="~/js/pattern.js"></script>
}
<div class="content-body">
    <i-form ref="formValidate" :model="user" :rules="validateRules" :label-width="80">
        <Form-item class="w-48" label="用户名" prop="Username">
            <i-input v-model="user.Username" placeholder="请输入用户名"></i-input>
        </Form-item>

        <Form-item class="w-48" label="邮箱" prop="Email">
            <i-input v-model="user.Email" placeholder="请输入邮箱地址"></i-input>
        </Form-item>

        <Form-item class="w-48" label="手机号码" prop="Mobile">
            <i-input v-model="user.Mobile" placeholder="请输入手机号码"></i-input>
        </Form-item>

        <Form-item class="w-48" label="密码" prop="Password">
            <i-input type="password" v-model="user.Password" placeholder="请设置用户密码"></i-input>
        </Form-item>

        <Form-item class="w-48" label="真实姓名" prop="Name">
            <i-input v-model="user.Name" placeholder="请输入真是姓名"></i-input>
        </Form-item>

        <Form-item class="w-48" label="头衔" prop="Title">
            <i-input v-model="user.Title" placeholder="请输入头衔"></i-input>
        </Form-item>

        <Form-item class="w-48 float-right">
            <i-button type="primary" v-on:click="handleSubmit('formValidate')">提交</i-button>
            <i-button type="ghost" v-on:click="handleReset('formValidate')" style="margin-left: 8px">重置</i-button>
        </Form-item>

    </i-form>

</div>

@section title_actions{
    <i-button type="success" v-on:click="goList">返回列表</i-button>
}



@section page_script{
    <script>
        var vm = new Vue({
            el: '#content',
            data: {
                // 用户对象
                user: {
                    Username: "",
                    Email: "",
                    Mobile: "",
                    Password: "",
                    Name: "",
                    Title: ""
                },
                // 验证规则
                validateRules: {
                    Username:
                    [
                        {
                            required: true,
                            message: "用户名不能为空"
                        }
                    ],
                    Email: [
                        {
                            required: true,
                            message: "邮箱不能为空"
                        },
                        {
                            pattern: pattern["Text.User.Email"],
                            message: "邮箱格式不正确!",
                            transform(value) {
                                if (value)
                                    return value.toString().trim();
                                return value;
                            }
                        }
                    ],
                    Mobile: [
                        {
                            required: true,
                            message: "手机号码不能为空"
                        },
                        {
                            pattern: pattern["Text.User.Phone"],
                            message: "请输入正确的手机号码!",
                            transform(value) {
                                if (value)
                                    return value.toString().trim();
                                return value;
                            }
                        }
                    ],
                    Password: [
                        {
                            required: true,
                            message: "密码不能为空"
                        }
                    ],
                    Name: [
                        {
                            required: true,
                            message: "姓名不能为空"
                        }
                    ],
                    Title: [
                        {
                            required: true,
                            message: "头衔不能为空"
                        }
                    ]
                }
            },
            methods: {
                goList() {
                    location = "/user/index";
                },
                handleSubmit(name) {
                    this.$refs[name].validate((valid) => {
                        if (valid) {
                            Ajax.post({
                                url: '/api/user/add',
                                data: this.user,
                                success: (response) => {
                                    var data = response.data;
                                    if (!data.Error) {
                                        this.$Message.success("添加成功!");
                                        setTimeout(() => {
                                                location = "/user/index";
                                            },
                                            1000);
                                    } else {
                                        this.$Message.error(data.Message);
                                    }
                                },
                                error: (error) => {
                                    this.$Message.error('操作失败，请重试！');
                                }
                            });
                        }
                    });
                },
                handleReset(name) {
                    this.$refs[name].resetFields();
                }
            }
        });
    </script>
}